<?xml version="1.0" encoding="ASCII"?>
<skyway:SkywayServiceOperation xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bean="model.bean" xmlns:skyway="model.service.skyway" xmlns:type="model.type" description="Save an existing User entity" internalId="b2beb2cf-5905-4908-9d13-3b59fe810103"><inputs name="id"><dataType xsi:type="type:PrimitiveDataType" type="INTEGER"/></inputs><inputs name="related_user"><dataType xsi:type="type:ComplexDataType"><type href="../../../domain/User.datatype#/"/></dataType></inputs><outputs name="comment"><dataType xsi:type="type:ComplexDataType"><type href="../../../domain/Comment.datatype#/"/></dataType></outputs><implementation xsi:type="bean:TextualMethodImplementation" text="Comment comment = commentDAO.findCommentByPrimaryKey(id, -1, -1);&#xA;User existinguser = userDAO.findUserByPrimaryKey(related_user.getId());&#xA;&#xA;&#xA;// copy into the existing record to preserve existing relationships&#xA;if (existinguser != null)&#x9;{&#xA;&#x9;&#x9;existinguser.setId (&#xA;&#x9;&#x9;related_user.getId());&#xA;&#x9;&#x9;existinguser.setUsername (&#xA;&#x9;&#x9;related_user.getUsername());&#xA;&#x9;&#x9;existinguser.setPassword (&#xA;&#x9;&#x9;related_user.getPassword());&#xA;&#x9;&#x9;existinguser.setEmail (&#xA;&#x9;&#x9;related_user.getEmail());&#xA;&#x9;&#x9;existinguser.setAvatar (&#xA;&#x9;&#x9;related_user.getAvatar());&#xA;&#x9;&#x9;existinguser.setMemberTitle (&#xA;&#x9;&#x9;related_user.getMemberTitle());&#xA;&#x9;&#x9;existinguser.setSignature (&#xA;&#x9;&#x9;related_user.getSignature());&#xA;&#x9;&#x9;existinguser.setEnabled (&#xA;&#x9;&#x9;related_user.getEnabled());&#xA;&#x9;&#x9;existinguser.setCreateTime (&#xA;&#x9;&#x9;related_user.getCreateTime());&#xA;&#x9;related_user = existinguser;&#xA;}&#xA;else&#x9;{&#xA;&#x9;related_user = userDAO.store(related_user);&#xA;&#x9;userDAO.flush();&#xA;}&#xA;&#xA;comment.setUser(related_user);&#xA;related_user.getComments().add(comment);&#xA;comment = commentDAO.store(comment);&#xA;commentDAO.flush();&#xA;&#xA;related_user = userDAO.store(related_user);&#xA;userDAO.flush();&#xA;&#xA;return comment;"/><modifiers>PUBLIC</modifiers></skyway:SkywayServiceOperation>
